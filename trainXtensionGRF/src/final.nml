grf {
 grfid: "RC!\02";
 name: string(STR_GRF_NAME);
 desc: string(STR_GRF_DESC);
 version: 33;
 min_compatible_version: 31;
 param {
  param_use_2cc_cargo {
   name: string(STR_PARAM_USE2CCC_NAME);
   desc: string(STR_PARAM_USE2CCC_DESC);
   type: bool;
   def_value: 1;
   bit: 1;
  }
 }
 param {
  param_enable_speed_limits {
   desc: string(STR_PARAM_SPEEDLIMITS_NAME);
   name: string(STR_PARAM_SPEEDLIMITS_DESC);
   type: bool;
   def_value: 1;
   bit: 1;
  }
 }
 param {
  param_enable_lvlcross {
   desc: string(STR_PARAM_LVLCROSS_NAME);
   name: string(STR_PARAM_LVLCROSS_DESC);
   type: bool;
   def_value: 0;
   bit: 1;
  }
 }
}
railtypetable {
 RAIL,
 ELRL,
 SBCA,
 MONO,
 MGLV
}
cargotable {
   PASS, MAIL, COAL, FOOD, GOLD, GOOD, GRAI, IORE, LVST, OIL_, PAPR, STEL, VALU, WHEA, WOOD,
   CORE, DIAM, FRUT, MAIZ, RUBR, WATR,
   AORE, BDMT, BRCK, CERA, CERE, CMNT, DYES, FERT, FICR, FISH, GLAS, LIME, OLSD, PETR, PLAS, POTA, RFPR,SAND, SULP, TOUR, VEHI, WDPR, WOOL,
   BEER, CLAY, ENSP, FMSP, FRVG, GRVL, MILK, MNSP, PHOS, PORE, RCYC, SCMT, SGBT, SGCN, JAVA, COPR, SUGR,
 URAN, NWST
}
template tmpl_engine(x, y) {
    [x, y, 8, 24, -3, -12]
    [x+ 9, y, 22, 17, -14, -8]
    [x+ 32, y, 32, 12, -17, -8]
    [x+ 65, y, 22, 17, -8, -10]
    [x+ 88, y, 8, 24, -3, -14]
    [x+ 97, y, 22, 17, -14, -9]
    [x+120, y, 32, 12, -15, -8]
    [x+153, y, 22, 17, -7, -8]
}
template tmpl_engine_buy(x, y) {
 [x+120, y, 32, 12, -18, -7]
}
template tmpl_wagon(x, y) {
 [x , y, 8, 30, -3, -18]
    [x+ 9, y, 22, 23, -14, -15]
    [x+ 32, y, 32, 18, -16, -14]
    [x+ 65, y, 22, 23, -6, -15]
}
template tmpl_wagon_buy(x, y) {
    [x+ 32, y, 32, 18, -16, -9]
}
template tmpl_overlay() {
    [ 1, 1, 63, 31, -31, 0]
    [ 66, 1, 63, 31, -31, 0]
    [ 131, 1, 63, 31, -31, 0]
    [ 196, 1, 63, 31, -31, 0]
    [ 261, 1, 63, 31, -31, 0]
    [ 326, 1, 63, 31, -31, 0]
    [ 391, 1, 63, 38, -31, -8]
    [ 456, 1, 63, 22, -31, 0]
 [ 521, 1, 63, 22, -31, 0]
    [ 586, 1, 63, 38, -31, -8]
}
template tmpl_underlay() {
    [ 1, 1, 63, 31, -31, 0]
    [ 66, 1, 63, 31, -31, 0]
    [ 131, 1, 63, 31, -32, 0]
    [ 196, 1, 63, 31, -31, 0]
    [ 261, 1, 63, 31, -31, 0]
    [ 326, 1, 63, 31, -31, 0]
    [ 391, 1, 63, 38, -31, -8]
    [ 456, 1, 63, 22, -31, 0]
 [ 521, 1, 63, 22, -31, 0]
    [ 586, 1, 63, 38, -31, -8]
 [ 1, 49, 63, 31, -31, 0]
 [ 66, 49, 63, 31, -31, 0]
    [ 131, 49, 63, 31, -31, 0]
    [ 196, 49, 63, 31, -31, 0]
    [ 261, 49, 63, 31, -31, 0]
    [ 326, 49, 63, 31, -31, 0]
}
template tmpl_tunnel() {
    [ 3, 1, 63, 30, -32, 0]
    [ 68, 1, 63, 30, -31, 0]
    [ 3, 64, 63, 30, -31, 0]
    [ 68, 64, 63, 30, -30, 0]
}
template tmpl_bridge() {
 [ 1, 1, 64, 31, -31, 0]
 [ 66, 1, 64, 31, -31, 0]
 [ 131, 1, 64, 39, -31, -8]
 [ 196, 1, 64, 23, -31, 0]
 [ 261, 1, 64, 23, -31, 0]
 [ 326, 1, 64, 39, -32, -8]
}
spriteset(spriteset_HSRL_overlay,"gfx/HSRL/Overlay-HSRL.png") {tmpl_overlay()}
spriteset(spriteset_HSRL_underlay,"gfx/HSRL/Underlay-HSRL.png") {tmpl_underlay()}
spriteset(spriteset_HSRL_tunnel,"gfx/HSRL/Tunnel-HSRL.png") {tmpl_tunnel()}
spriteset(spriteset_HSRL_bridges,"gfx/HSRL/Bridge-HSRL.png") {tmpl_bridge()}
spriteset(spriteset_HSRL_levcrossclosed,"gfx/HSRL/LevelCrossing-HSRL.png") {
 [ 1, 1, 64, 31, -31, 0, ANIM]
 [ 66, 1, 64, 31, -31, 0, ANIM]
 [148, 7, 14, 15, -11, -9, ANIM]
 [233, 8, 14, 15, -2, -10, ANIM]
 [148, 7, 14, 15, -13, -9, ANIM]
 [207, 7, 13, 13, -11, -10, ANIM]
 [175, 6, 13, 13, 0, -10, ANIM]
 [233, 8, 14, 15, 5, -11, ANIM]
 [175, 6, 13, 13, -2, -10, ANIM]
 [207, 7, 13, 13, -6, -12, ANIM]
}
spriteset(spriteset_HSRL_levcrossopen,"gfx/HSRL/LevelCrossing-HSRL.png") {
 [ 1, 1, 64, 31, -31, 0]
 [ 66, 1, 64, 31, -31, 0]
 [157, 28, 5, 15, -2, -11]
 [233, 29, 5, 15, -2, -12]
 [157, 28, 5, 15, -4, -11]
 [215, 28, 5, 15, -3, -12]
 [175, 27, 5, 15, 0, -12]
 [233, 29, 5, 15, 5, -13]
 [175, 27, 5, 15, -2, -12]
 [215, 28, 5, 15, 2, -14]
}
spriteset(spriteset_HSRL_catpol,"gfx/HSRL/CatenaryPoles-HSRL.png") {
 [ 1, 1, 8, 22, -7, -20]
 [ 17, 1, 8, 24, 0, -23]
 [ 33, 1, 8, 22, 0, -20]
 [ 49, 1, 8, 24, -7, -23]
 [ 65, 1, 2, 28, 0, -21]
 [ 81, 1, 2, 22, 0, -22]
 [ 97, 1, 8, 22, 0, -23]
 [ 113, 1, 8, 22, -7, -21]
}
spriteset(spriteset_HSRL_catwire,"gfx/HSRL/CatenaryWires-HSRL.png") {
 [ 1, 1, 32, 22, -29, -8]
 [ 49, 1, 32, 22, -1, -8]
 [ 97, 1, 32, 7, -1, -8]
 [ 145, 1, 1, 22, 0, -9]
 [ 161, 1, 32, 30, -29, -8]
 [ 209, 1, 32, 15, -1, 0]
 [ 257, 1, 32, 15, -29, 1]
 [ 305, 1, 32, 30, -1, -8]
 [ 353, 1, 32, 19, -29, -5]
 [ 401, 1, 32, 19, -1, -5]
 [ 449, 1, 32, 7, -1, -8]
 [ 497, 1, 1, 19, 0, -6]
 [ 513, 1, 32, 27, -29, -5]
 [ 561, 1, 32, 12, -1, 3]
 [ 609, 1, 32, 12, -29, 3]
 [ 657, 1, 32, 27, -1, -5]
 [ 1, 49, 32, 22, -29, -8]
 [ 49, 49, 32, 22, -1, -8]
 [ 97, 49, 32, 7, -1, -8]
 [ 145, 49, 1, 22, 0, -9]
 [ 161, 49, 32, 20, -29, -8]
 [ 209, 49, 32, 15, -1, 0]
 [ 257, 49, 32, 15, -29, 0]
 [ 305, 49, 32, 30, -1, -8]
 [ 353, 49, 16, 11, -29, 2]
 [ 385, 49, 16, 14, -1, -8]
 [ 417, 49, 16, 14, -13, -8]
 [ 449, 49, 16, 11, 15, 3]
}
switch(FEAT_RAILTYPES,SELF,switch_HSRL_levcross,level_crossing_status) {
 LEVEL_CROSSING_CLOSED: spriteset_HSRL_levcrossclosed;
 spriteset_HSRL_levcrossopen;
}
item(FEAT_RAILTYPES, item_RAIL) {
 property {
  label: "RAIL";
  compatible_railtype_list: ["RAIL","ELRL","SAEA","SBEE","SBCA","SADD","SAA3","SAAN"];
  powered_railtype_list: ["RAIL","ELRL","SAEA","SBEE","SBCA","SADD","SAA3","SAAN"];
 }
 if (param_enable_lvlcross == 0) {
  property {
   speed_limit: 180 km/h;
  }
 }
}
item(FEAT_RAILTYPES, item_ELRL) {
 property {
  label: "ELRL";
  compatible_railtype_list: ["RAIL","ELRL","SAEA","SBEE","SBCA","SADD","SAA3","SAAN"];
  powered_railtype_list: ["ELRL","SAEA","SBEE","SBCA","SADD","SAA3"];
 }
 if (param_enable_lvlcross == 0) {
  property {
   speed_limit: 180 km/h;
  }
 }
}
item(FEAT_RAILTYPES, item_HSRL) {
 property {
  label: "SBCA";
  name: string(STR_HSRL_NAME);
  toolbar_caption: string(STR_HSRL_TOOL);
  menu_text: string(STR_HSRL_MENU);
  build_window_caption: string(STR_HSRL_BUIL);
  autoreplace_text: string(STR_HSRL_REPL);
  new_engine_text: string(STR_HSRL_NENG);
  sort_order: 30;
  introduction_date: date(1980,01,01);
  compatible_railtype_list: ["RAIL","ELRL","SAEA","SBEE","SBCA","SADD","SAA3"];
  powered_railtype_list: ["ELRL","SAEA","SBEE","SBCA","SADD","SAA3"];
  alternative_railtype_list: ["SBAA","SBBA","SBCA","SBDA","SBEA"];
  introduces_railtype_list: ["SAEA","SADD","ELRL","SAA3"];
  acceleration_model: ACC_MODEL_RAIL;
  construction_cost: 24;
  maintenance_cost: 24;
  station_graphics: RAILTYPE_STATION_NORMAL;
  railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
 }
 if (param_enable_lvlcross == 0) {
  property {
   railtype_flags: bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING, RAILTYPE_FLAG_CATENARY);
  }
 }
 if (param_enable_speed_limits == 1) {
  property {
   speed_limit: 400 km/h;
  }
 }
 graphics {
  track_overlay: spriteset_HSRL_overlay;
  underlay: spriteset_HSRL_underlay;
  tunnels: spriteset_HSRL_tunnel;
  level_crossings: switch_HSRL_levcross;
  bridge_surfaces: spriteset_HSRL_bridges;
  catenary_wire: spriteset_HSRL_catwire;
  catenary_pylons: spriteset_HSRL_catpol;
 }
}
spriteset (spriteset_engine_steam, "gfx/IronHorse.png") { tmpl_engine(0, 0) }
spriteset (spriteset_engine_steam_buy, "gfx/IronHorse.png") { tmpl_engine_buy(0, 0) }
item (FEAT_TRAINS, item_engine_steam) {
 property {
  name: string(STR_EAR_STEAM);
  misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC);
  ai_special_flag: AI_FLAG_PASSENGER;
  climates_available: ALL_CLIMATES;
  introduction_date: date(1956, 4, 1);
  model_life: 45;
  vehicle_life: 22;
  reliability_decay: 11;
  refittable_cargo_classes: bitmask();
  non_refittable_cargo_classes: bitmask();
  track_type: RAIL;
  dual_headed: 0;
  cost_factor: 24;
  running_cost_base: RUNNING_COST_STEAM;
  running_cost_factor: 120;
  weight: 156 ton;
  power: 1479 hp;
  tractive_effort_coefficient: 0.27;
  speed: 156 km/h;
  air_drag_coefficient: 0.04;
  length: 8;
  sprite_id: SPRITE_ID_NEW_TRAIN;
  engine_class: ENGINE_CLASS_STEAM;
  visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_STEAM, -1, DISABLE_WAGON_POWER);
  bitmask_vehicle_info: 0;
 }
 graphics {
  default: spriteset_engine_steam;
  purchase: spriteset_engine_steam_buy;
  additional_text: return string(STR_EAR_STEAM_DESC);
 }
}
spriteset (spriteset_engine_heavy, "gfx/HeavyTurbo_2cc.png") { tmpl_engine(0, 0) }
spriteset (spriteset_engine_heavy_buy, "gfx/HeavyTurbo_2cc.png") { tmpl_engine_buy(0, 0) }
item (FEAT_TRAINS, item_engine_heavy) {
 property {
  name: string(STR_EAR_HEAVY);
  misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC);
  ai_special_flag: AI_FLAG_CARGO;
  climates_available: ALL_CLIMATES;
  introduction_date: date(1976, 4, 1);
  model_life: 45;
  vehicle_life: 20;
  reliability_decay: 18;
  refittable_cargo_classes: bitmask();
  non_refittable_cargo_classes: bitmask();
  track_type: RAIL;
  dual_headed: 0;
  cost_factor: 36;
  running_cost_base: RUNNING_COST_DIESEL;
  weight: 218 ton;
  air_drag_coefficient: 0.05;
  length: 8;
  tractive_effort_coefficient: 0.3;
  power: 1 hp;
  speed: 1 km/h;
  running_cost_factor: 1;
  sprite_id: SPRITE_ID_NEW_TRAIN;
  engine_class: ENGINE_CLASS_DIESEL;
  visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 1, DISABLE_WAGON_POWER);
  bitmask_vehicle_info: 0;
 }
 graphics {
  default: spriteset_engine_heavy;
  purchase: spriteset_engine_heavy_buy;
  additional_text: return string(STR_EAR_HEAVY_DESC);
  purchase_power: 6522;
  purchase_speed: 100;
  purchase_running_cost_factor: 172;
  power: return (current_railtype == ELRL)? 9384 : 6522;
  speed: return (current_railtype == ELRL)? 120 : 100;
  running_cost_factor: return (current_railtype == ELRL)? 190 : 172;
 }
}
spriteset (spriteset_intermodal1_empty, "gfx/FreightCar.png") { tmpl_wagon(0, 0) }
spriteset (spriteset_intermodal1_cc1, "gfx/FreightCar.png") { tmpl_wagon(0, 31) }
spriteset (spriteset_intermodal1_cc2, "gfx/FreightCar.png") { tmpl_wagon(0, 62) }
spriteset (spriteset_intermodal1_buy, "gfx/FreightCar.png") { tmpl_wagon_buy(0, 31) }
switch (FEAT_TRAINS, SELF, sw_intermodal1_cc, position_in_consist % 2 || !param_use_2cc_cargo) {
 0: spriteset_intermodal1_cc2;
 spriteset_intermodal1_cc1;
}
switch (FEAT_TRAINS, SELF, sw_intermodal1_gfx, (10 * cargo_count / cargo_capacity) >= 5) {
 0: spriteset_intermodal1_empty;
 1: sw_intermodal1_cc;
}
item (FEAT_TRAINS, item_wagon_intermodal1) {
 property {
  name: string(STR_INTERMODAL1);
  misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1950, 4, 1);
  model_life: 80;
  vehicle_life: 30;
  track_type: RAIL;
  cost_factor: 239;
  running_cost_base: RUNNING_COST_NONE;
  weight: 21 ton;
  speed: 180 km/h;
  power: 0;
  tractive_effort_coefficient: 0;
        air_drag_coefficient: 0;
  extra_power_per_wagon: 0;
  cargo_allow_refit: [GOOD, MAIL, FOOD, FRUT, PAPR, ENSP, FMSP, MNSP];
  refit_cost: 0;
  default_cargo_type: GOOD;
  cargo_capacity: 32;
  cargo_age_period: 190;
  loading_speed: 7;
  sprite_id: SPRITE_ID_NEW_TRAIN;
  engine_class: ENGINE_CLASS_DIESEL;
  bitmask_vehicle_info: 0;
  visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
 }
 graphics {
  default: sw_intermodal1_gfx;
  purchase: spriteset_intermodal1_buy;
  additional_text: return string(STR_INTERMODAL1_DESC);
 }
}
spriteset (spriteset_intermodal2_empty, "gfx/DoubleFreightCar.png") { tmpl_wagon(0, 0) }
spriteset (spriteset_intermodal2_cc1, "gfx/DoubleFreightCar.png") { tmpl_wagon(0, 31) }
spriteset (spriteset_intermodal2_cc2, "gfx/DoubleFreightCar.png") { tmpl_wagon(0, 62) }
spriteset (spriteset_intermodal2_buy, "gfx/DoubleFreightCar.png") { tmpl_wagon_buy(0, 31) }
switch (FEAT_TRAINS, SELF, sw_intermodal2_cc, position_in_consist % 2 || !param_use_2cc_cargo) {
 0: spriteset_intermodal2_cc1;
 spriteset_intermodal2_cc2;
}
switch (FEAT_TRAINS, SELF, sw_intermodal2_gfx, (10 * cargo_count / cargo_capacity) >= 5) {
 0: spriteset_intermodal2_empty;
 1: sw_intermodal2_cc;
}
item (FEAT_TRAINS, item_wagon_intermodal2) {
 property {
  name: string(STR_INTERMODAL2);
  misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1982, 4, 1);
  model_life: 100;
  vehicle_life: 30;
  track_type: RAIL;
  cost_factor: 245;
  running_cost_base: RUNNING_COST_NONE;
  weight: 22 ton;
  speed: 160 km/h;
  power: 0;
  tractive_effort_coefficient: 0;
        air_drag_coefficient: 0;
  extra_power_per_wagon: 0;
  cargo_allow_refit: [GOOD, MAIL, FOOD, FRUT, PAPR, ENSP, FMSP, MNSP];
  refit_cost: 0;
  default_cargo_type: GOOD;
  cargo_capacity: 64;
  cargo_age_period: 190;
  loading_speed: 7;
  sprite_id: SPRITE_ID_NEW_TRAIN;
  engine_class: ENGINE_CLASS_DIESEL;
  bitmask_vehicle_info: 0;
  visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
 }
 graphics {
  default: sw_intermodal2_gfx;
  purchase: spriteset_intermodal2_buy;
  additional_text: return string(STR_INTERMODAL2_DESC);
 }
}
